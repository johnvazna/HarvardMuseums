// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'object_record_dto.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

ObjectRecordDto _$ObjectRecordDtoFromJson(Map<String, dynamic> json) =>
    ObjectRecordDto(
      copyright: json['copyright'] as String?,
      contextualtextcount: json['contextualtextcount'] as int?,
      creditline: json['creditline'] as String?,
      accesslevel: json['accesslevel'] as int?,
      dateoflastpageview: json['dateoflastpageview'] as String?,
      classificationid: json['classificationid'] as int?,
      division: json['division'] as String?,
      markscount: json['markscount'] as int?,
      publicationcount: json['publicationcount'] as int?,
      totaluniquepageviews: json['totaluniquepageviews'] as int?,
      contact: json['contact'] as String?,
      colorcount: json['colorcount'] as int?,
      rank: json['rank'] as int?,
      id: json['id'] as int?,
      state: json['state'] as String?,
      verificationleveldescription:
          json['verificationleveldescription'] as String?,
      period: json['period'] as String?,
      images: (json['images'] as List<dynamic>?)
          ?.map((e) => ObjectImageDto.fromJson(e as Map<String, dynamic>))
          .toList(),
      worktypes: (json['worktypes'] as List<dynamic>?)
          ?.map((e) => ObjectWorktypeDto.fromJson(e as Map<String, dynamic>))
          .toList(),
      imagecount: json['imagecount'] as int?,
      totalpageviews: json['totalpageviews'] as int?,
      accessionyear: json['accessionyear'] as int?,
      standardreferencenumber: json['standardreferencenumber'] as int?,
      signed: json['signed'] as String?,
      classification: json['classification'] as String?,
      relatedcount: json['relatedcount'] as int?,
      verificationlevel: json['verificationlevel'] as int?,
      primaryimageurl: json['primaryimageurl'] as String?,
      titlescount: json['titlescount'] as int?,
      peoplecount: json['peoplecount'] as int?,
      style: json['style'] as String?,
      lastupdate: json['lastupdate'] as String?,
      commentary: json['commentary'] as String?,
      periodid: json['periodid'] as int?,
      technique: json['technique'] as String?,
      edition: json['edition'] as String?,
      description: json['description'] as String?,
      medium: json['medium'] as String?,
      lendingpermissionlevel: json['lendingpermissionlevel'] as int?,
      title: json['title'] as String?,
      accessionmethod: json['accessionmethod'] as String?,
      colors: (json['colors'] as List<dynamic>?)
          ?.map((e) => ObjectColorDto.fromJson(e as Map<String, dynamic>))
          .toList(),
      provenance: json['provenance'] as String?,
      groupcount: json['groupcount'] as int?,
      dated: json['dated'] as String?,
      department: json['department'] as String?,
      dateend: json['dateend'] as int?,
      people: (json['people'] as List<dynamic>?)
          ?.map((e) => ObjectPeopleDto.fromJson(e as Map<String, dynamic>))
          .toList(),
      url: json['url'] as String?,
      dateoffirstpageview: json['dateoffirstpageview'] as String?,
      century: json['century'] as String?,
      objectnumber: json['objectnumber'] as String?,
      labeltext: json['labeltext'] as String?,
      datebegin: json['datebegin'] as int?,
      culture: json['culture'] as String?,
      exhibitioncount: json['exhibitioncount'] as int?,
      imagepermissionlevel: json['imagepermissionlevel'] as int?,
      mediacount: json['mediacount'] as int?,
      objectid: json['objectid'] as int?,
      techniqueid: json['techniqueid'] as String?,
      dimensions: json['dimensions'] as String?,
      seeAlso: (json['seeAlso'] as List<dynamic>?)
          ?.map((e) => ObjectAlsoDTO.fromJson(e as Map<String, dynamic>))
          .toList(),
    );

Map<String, dynamic> _$ObjectRecordDtoToJson(ObjectRecordDto instance) =>
    <String, dynamic>{
      'copyright': instance.copyright,
      'contextualtextcount': instance.contextualtextcount,
      'creditline': instance.creditline,
      'accesslevel': instance.accesslevel,
      'dateoflastpageview': instance.dateoflastpageview,
      'classificationid': instance.classificationid,
      'division': instance.division,
      'markscount': instance.markscount,
      'publicationcount': instance.publicationcount,
      'totaluniquepageviews': instance.totaluniquepageviews,
      'contact': instance.contact,
      'colorcount': instance.colorcount,
      'rank': instance.rank,
      'id': instance.id,
      'state': instance.state,
      'verificationleveldescription': instance.verificationleveldescription,
      'period': instance.period,
      'images': instance.images,
      'worktypes': instance.worktypes,
      'imagecount': instance.imagecount,
      'totalpageviews': instance.totalpageviews,
      'accessionyear': instance.accessionyear,
      'standardreferencenumber': instance.standardreferencenumber,
      'signed': instance.signed,
      'classification': instance.classification,
      'relatedcount': instance.relatedcount,
      'verificationlevel': instance.verificationlevel,
      'primaryimageurl': instance.primaryimageurl,
      'titlescount': instance.titlescount,
      'peoplecount': instance.peoplecount,
      'style': instance.style,
      'lastupdate': instance.lastupdate,
      'commentary': instance.commentary,
      'periodid': instance.periodid,
      'technique': instance.technique,
      'edition': instance.edition,
      'description': instance.description,
      'medium': instance.medium,
      'lendingpermissionlevel': instance.lendingpermissionlevel,
      'title': instance.title,
      'accessionmethod': instance.accessionmethod,
      'colors': instance.colors,
      'provenance': instance.provenance,
      'groupcount': instance.groupcount,
      'dated': instance.dated,
      'department': instance.department,
      'dateend': instance.dateend,
      'people': instance.people,
      'url': instance.url,
      'dateoffirstpageview': instance.dateoffirstpageview,
      'century': instance.century,
      'objectnumber': instance.objectnumber,
      'labeltext': instance.labeltext,
      'datebegin': instance.datebegin,
      'culture': instance.culture,
      'exhibitioncount': instance.exhibitioncount,
      'imagepermissionlevel': instance.imagepermissionlevel,
      'mediacount': instance.mediacount,
      'objectid': instance.objectid,
      'techniqueid': instance.techniqueid,
      'dimensions': instance.dimensions,
      'seeAlso': instance.seeAlso,
    };
